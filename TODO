# Conisderations for 6IMPOSE development
Generally:
- ID always refers to numerical ID. Name to string
- All units in SI [m, radians...]
- One dataset contains multiple subsects (scene or object related)
- bounding box in [xmin, ymin, xmax, ymax] format
- matrices is list of lists -> rowwise
- 'loose' bounding box is the bounding box of the object without occlusions, 'tight': visible part
- 'visib_fract': visible fraction of the pixels: pixels of visible mask / pixels of mask

## Output Folder format:
roughly as: https://github.com/thodan/bop_toolkit/blob/master/docs/bop_datasets_format.md
CHANGES:
- everying in m instead of mm and save depth as float
- save one 0000000.json per image instead of one scene_gt.json
```
<dataset_name>/
├─ camera.json                  | contains intrinsic matrix
├─ dataset_info.json            | contains global statistics
├─ gen_params.yaml/             | copy of the data generation parameters
├─ models/
│  ├─ models_info.json          | radius, etc
│  ├─ obj_<OBJ_ID>.ply/
├─ train|test|val/
│  ├─ scene|object ID/
│  │  ├─ rgb/
│  │  │  ├─ 00000000.png
│  │  ├─ rgb_r/
│  │  ├─ mask/
│  │  ├─ mask_visib/
│  │  ├─ depth/
│  │  ├─ gt/
│  │  │  ├─ 00000000.json       | contains list[{'obj_id', 'cam_R_m2c', cam_T_m2c', 'bbox_loose', 'bbox_tight', 'visib_fract'}]
```

## TODO
Data Generation:
- [ ] Scene Setup:
    - [ ] Import objects
        - [ ] .obj files -> Meshes
        - [ ] Create PBR materials
        - [ ] Define semantics
    - [ ] Import backgrounds
        - [ ] Load from folder
    - [ ] Setup rendering settings
        - [ ] Cycles settings: num samples, num bounces…
        - [ ] Configure GPUs and backend
        - [ ] Configure parallel workers
- [ ] Rendering Loop
    - [ ] Randomize objects
        - [ ] Texture
        - [ ] position&rotation
        - [ ] Mesh (scaling, deformation... other ideas)
    - [ ] Randomize Background (from images, or other? depth?)
    - [ ] Randomize lights
        - [ ] Strength, Color, position, number, type
    - [ ] Render to file
        - [ ] RGB, RGB_R
        - [ ] Depth
        - [ ] Segmentation masks (visible and full)
        - [ ] 6DPoses
        - [ ] Bounding Boxes (tight and loose)
        - [ ] Albedo
    - [ ] Save metadata:
        - [ ] Statistics, number of datapoints…
        - [ ] Camera parameters, intrinsics
- [ ] Write a Dataloader for CVDE
    - high performant (for training)
    - Choose which data
    - [ ] Visualizer: preview generated data
        - [ ] RGB, RGB_R, Depth, Semantics
        - [ ] Pointcloud
        - [ ] Annotations

### Links
- possible file format for saving data:
https://arrow.apache.org/docs/python/parquet.html
- Blender Python API
https://docs.blender.org/api/current/index.html
- Blendify
https://github.com/ptrvilya/blendify/tree/main